name: build_documentation
on:
  push:
    branches:
      - 'master'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
# Setup

      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

# Version info

      # - name: Grant execute permission for gradlew
      #   run: chmod +x gradlew

    - name: Gradle Get version
      uses: eskatos/gradle-command-action@v1
      with:
        arguments: getVersion -q
        wrapper-cache-enabled: true
        dependencies-cache-enabled: true

      # - name: Retrieve versions from ForgeDev
      #   run: ./gradlew getVersion

      - name: Extract Forge version
        id: forge_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'forge_version'

      - name: Read mappings channel
        id: mappings_channel
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'mappings_channel'

      - name: Read mappings version
        id: mappings_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'mappings_version'

# Sources extract

      - name: Load Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./java
          key: ${{ steps.version.outputs.prop }}-sources

      # - name: Generate and copy sources using Gradle
      #   if: steps.cache.outputs.cache-hit != 'true'
      #   run: ./gradlew copySources

      - name: Generate and copy sources using Gradle
        if: steps.cache.outputs.cache-hit != 'true'
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: copySources -q
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true

# Doxygen the docs

      - name: Build documentation using Doxygen
        uses: mattnotmitt/doxygen-action@v1.2.0
        env:
          FORGE_VERSION: ${{ steps.forge_version.outputs.value }}
          MAPPINGS_VERSION: ${{ steps.mappings_version.outputs.value }}
          MAPPINGS_CHANNEL: ${{ steps.mappings_channel.outputs.value }}
        with:
          working-directory: './'
          doxyfile-path: './Doxyfile'

      - name: Deploy to GitHub pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out/html
