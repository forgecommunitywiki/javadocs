name: Build Documentation
on:
  push:
    branches:
      - 'master'
      - '[0-9].[0-9]+.[0-9]+'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
# Setup

      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

# Version info

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Gradle Get version
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: retrieveVersion -q
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true

      # - name: Retrieve versions from ForgeDev
      #   run: ./gradlew retrieveVersion -q

      - name: Extract Forge version
        id: forge_version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'build/forge_version.json'
          prop_path: 'forge_version'

      - name: Extract mapping channel
        id: mapping_channel
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'build/forge_version.json'
          prop_path: 'mapping_channel'

      - name: Extract mapping version
        id: mapping_version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'build/forge_version.json'
          prop_path: 'mapping_version'

      - name: Extract mc version
        id: mc_main_version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'build/forge_version.json'
          prop_path: 'mc_main_version'

# Sources extract

      - name: Load Cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ./.java
          key: ${{ steps.forge_version.outputs.prop }}-sources

      - name: Generate and copy sources using Gradle
        if: steps.cache.outputs.cache-hit != 'true'
        uses: eskatos/gradle-command-action@v1
        with:
          arguments: copySources -q
          wrapper-cache-enabled: true
          dependencies-cache-enabled: true

# Doxygen the docs

      - name: Make folder
        run: mkdir -p ./out/html/${{ steps.mc_main_version.outputs.prop }}

      - name: Build documentation using Doxygen
        uses: mattnotmitt/doxygen-action@v1.2.0
        env:
          FORGE_VERSION: ${{ steps.forge_version.outputs.prop }}
          MAPPING_VERSION: ${{ steps.mapping_version.outputs.prop }}
          MAPPING_CHANNEL: ${{ steps.mapping_channel.outputs.prop }}
          MC_MAIN_VERSION: ${{ steps.mc_main_version.outputs.prop }}
        with:
          working-directory: './'
          doxyfile-path: './Doxyfile'

      - name: copy file
        uses: canastro/copy-file-action@master
        with:
          source: "src/web/version.js"
          target: "out/html/version.js"

      - name: Deploy to GitHub pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./out/html
